using System;
namespace AbstFactyPatn {    public interface I_Dog    {        void speak();                void action();    }
    public interface I_Tiger    {        void speak();                void action();    }
    #region Wild Animal collections    class Wild_Dog : I_Dog    {        public void speak()        {            Console.WriteLine("Wild Dog says: Bow-Wow.");        }                public void action()        {             Console.WriteLine("Wild Dogs prefer to roam freely in jungles.\n");        }    }    class Wild_Tiger : I_Tiger    {        public void speak()        {            Console.WriteLine("Wild Tiger says: Halum.");
 }        public void action()        {            Console.WriteLine("Wild Tigers prefer hunting in jungles.\n");        }    }    #endregion
    #region Pet Animal collections    class Pet_Dog : I_Dog    {        public void speak()        {            Console.WriteLine("Pet Dog says: Bow-Wow.");        }        public void action()        {            Console.WriteLine("Pet Dogs prefer to stay at home.\n");        }            }    class Pet_Tiger : I_Tiger    {        public void speak()        {            Console.WriteLine("Pet Tiger says: Halum.");        }        public void action()        {            Console.WriteLine("Pet Tigers play in an animal circus.\n");        }            }    #endregion    //Abstract Factory    public interface IAnimalFact    {        I_Dog Get_Dog();
 I_Tiger Get_Tiger();    }    //Concrete Factory-Wild Animal Factory    public class WildAnimalFact : IAnimalFact    {        public I_Dog Get_Dog()        {            return new Wild_Dog();        }
        public I_Tiger Get_Tiger()        {            return new Wild_Tiger();        }    }    //Concrete Factory-Pet Animal Factory    public class PetAnimalFact : IAnimalFact    {        public I_Dog Get_Dog()        {            return new Pet_Dog();        }
        public I_Tiger Get_Tiger()        {            return new Pet_Tiger();        }    }
    class Program    {        static void Main(string[] args)        {            Console.WriteLine("***Abstract Factory Pattern Demo***\n");
            //Making a wild dog through WildAnimalFact            IAnimalFact wildAnimalFact = new WildAnimalFact();            I_Dog wild_Dog = wildAnimalFact.Get_Dog();         
  wild_Dog.speak();            wild_Dog.action();            //Making a wild tiger through WildAnimalFact            I_Tiger wild_Tiger = wildAnimalFact.Get_Tiger();                        wild_Tiger.speak();            wild_Tiger.action();
            Console.WriteLine("******************");
            //Making a pet dog through PetAnimalFact            IAnimalFact PetAnimalFactory = new PetAnimalFact();            I_Dog pet_Dog = P.Get_Dog();                        pet_Dog.speak();            pet_Dog.action();            //Making a pet tiger through PetAnimalFact            I_Tiger pet_Tiger = P.Get_Tiger();                        pet_Tiger.speak();            pet_Tiger.action();
            Console.ReadLine();        }    } } 
